# http://bxhorn.com/rcolorbrewer-palettes/
a <- ggplot(df_mlt,
aes(x = document, y = value*10000, fill = factor(topic)) ) +
xlab("Cell types") + ylab("") +
scale_fill_brewer(palette = "Accent") +
theme(legend.position = "none",
axis.text = element_text(size = 4),
title = element_text(size = 6)) +
ggtitle("STRUCTURE plot by developmental phase") +
scale_y_continuous( breaks = seq(0, value_ifl, length.out = ticks_number),
labels = seq(0, 1, 1/(ticks_number -1 ) ) ) +
coord_flip()
# width = 1: increase bar width and in turn remove space
# between bars
b <- a + geom_bar(stat = "identity",
position = "stack",
width = 1)
b <- b + panel_border(remove = TRUE)
b <- ggdraw(switch_axis_position((b), axis = "y"))
cowplot::plot_grid(b)
a <- ggplot(df_mlt,
aes(x = document, y = value*10000, fill = factor(topic)) ) +
xlab("Cell types") + ylab("") +
scale_fill_brewer(palette = "Dark2") +
theme(legend.position = "none",
axis.text = element_text(size = 4),
title = element_text(size = 6)) +
ggtitle("STRUCTURE plot by developmental phase") +
scale_y_continuous( breaks = seq(0, value_ifl, length.out = ticks_number),
labels = seq(0, 1, 1/(ticks_number -1 ) ) ) +
coord_flip()
# width = 1: increase bar width and in turn remove space
# between bars
b <- a + geom_bar(stat = "identity",
position = "stack",
width = 1)
b <- b + panel_border(remove = TRUE)
b <- ggdraw(switch_axis_position((b), axis = "y"))
cowplot::plot_grid(b)
a <- ggplot(df_mlt,
aes(x = document, y = value*10000, fill = factor(topic)) ) +
xlab("Cell types") + ylab("") +
scale_fill_brewer(palette = "Set1") +
theme(legend.position = "none",
axis.text = element_text(size = 4),
title = element_text(size = 6)) +
ggtitle("STRUCTURE plot by developmental phase") +
scale_y_continuous( breaks = seq(0, value_ifl, length.out = ticks_number),
labels = seq(0, 1, 1/(ticks_number -1 ) ) ) +
coord_flip()
# width = 1: increase bar width and in turn remove space
# between bars
b <- a + geom_bar(stat = "identity",
position = "stack",
width = 1)
b <- b + panel_border(remove = TRUE)
b <- ggdraw(switch_axis_position((b), axis = "y"))
cowplot::plot_grid(b)
cell_labels
unique(cell_labels)
length(unique(cell_labels))
a <- ggplot(df_mlt,
aes(x = document, y = value*10000, fill = factor(topic)) ) +
xlab("Cell types") + ylab("") +
scale_fill_brewer(palette = "Set2") +
theme(legend.position = "none",
axis.text = element_text(size = 4),
title = element_text(size = 6)) +
ggtitle("STRUCTURE plot by developmental phase") +
scale_y_continuous( breaks = seq(0, value_ifl, length.out = ticks_number),
labels = seq(0, 1, 1/(ticks_number -1 ) ) ) +
coord_flip()
# width = 1: increase bar width and in turn remove space
# between bars
b <- a + geom_bar(stat = "identity",
position = "stack",
width = 1)
b <- b + panel_border(remove = TRUE)
b <- ggdraw(switch_axis_position((b), axis = "y"))
cowplot::plot_grid(b)
a <- ggplot(df_mlt,
aes(x = document, y = value*10000, fill = factor(topic)) ) +
xlab("Cell types") + ylab("") +
scale_fill_brewer(palette = "Paired") +
theme(legend.position = "none",
axis.text = element_text(size = 4),
title = element_text(size = 6)) +
ggtitle("STRUCTURE plot by developmental phase") +
scale_y_continuous( breaks = seq(0, value_ifl, length.out = ticks_number),
labels = seq(0, 1, 1/(ticks_number -1 ) ) ) +
coord_flip()
# width = 1: increase bar width and in turn remove space
# between bars
b <- a + geom_bar(stat = "identity",
position = "stack",
width = 1)
b <- b + panel_border(remove = TRUE)
b <- ggdraw(switch_axis_position((b), axis = "y"))
cowplot::plot_grid(b)
a <- ggplot(df_mlt,
aes(x = document, y = value*10000, fill = factor(topic)) ) +
xlab("Cell types") + ylab("") +
scale_fill_brewer(palette = "Paired1") +
theme(legend.position = "none",
axis.text = element_text(size = 4),
title = element_text(size = 6)) +
ggtitle("STRUCTURE plot by developmental phase") +
scale_y_continuous( breaks = seq(0, value_ifl, length.out = ticks_number),
labels = seq(0, 1, 1/(ticks_number -1 ) ) ) +
coord_flip()
# width = 1: increase bar width and in turn remove space
# between bars
b <- a + geom_bar(stat = "identity",
position = "stack",
width = 1)
b <- b + panel_border(remove = TRUE)
b <- ggdraw(switch_axis_position((b), axis = "y"))
cowplot::plot_grid(b)
a <- ggplot(df_mlt,
aes(x = document, y = value*10000, fill = factor(topic)) ) +
xlab("Cell types") + ylab("") +
scale_fill_brewer(palette = "Pastel1") +
theme(legend.position = "none",
axis.text = element_text(size = 4),
title = element_text(size = 6)) +
ggtitle("STRUCTURE plot by developmental phase") +
scale_y_continuous( breaks = seq(0, value_ifl, length.out = ticks_number),
labels = seq(0, 1, 1/(ticks_number -1 ) ) ) +
coord_flip()
# width = 1: increase bar width and in turn remove space
# between bars
b <- a + geom_bar(stat = "identity",
position = "stack",
width = 1)
b <- b + panel_border(remove = TRUE)
b <- ggdraw(switch_axis_position((b), axis = "y"))
cowplot::plot_grid(b)
a <- ggplot(df_mlt,
aes(x = document, y = value*10000, fill = factor(topic)) ) +
xlab("Cell types") + ylab("") +
scale_fill_brewer(palette = "Spectral") +
theme(legend.position = "none",
axis.text = element_text(size = 4),
title = element_text(size = 6)) +
ggtitle("STRUCTURE plot by developmental phase") +
scale_y_continuous( breaks = seq(0, value_ifl, length.out = ticks_number),
labels = seq(0, 1, 1/(ticks_number -1 ) ) ) +
coord_flip()
# width = 1: increase bar width and in turn remove space
# between bars
b <- a + geom_bar(stat = "identity",
position = "stack",
width = 1)
b <- b + panel_border(remove = TRUE)
b <- ggdraw(switch_axis_position((b), axis = "y"))
cowplot::plot_grid(b)
a <- ggplot(df_mlt,
aes(x = document, y = value*10000, fill = factor(topic)) ) +
xlab("Cell types") + ylab("") +
scale_fill_brewer(palette = "RdYlGn") +
theme(legend.position = "none",
axis.text = element_text(size = 4),
title = element_text(size = 6)) +
ggtitle("STRUCTURE plot by developmental phase") +
scale_y_continuous( breaks = seq(0, value_ifl, length.out = ticks_number),
labels = seq(0, 1, 1/(ticks_number -1 ) ) ) +
coord_flip()
# width = 1: increase bar width and in turn remove space
# between bars
b <- a + geom_bar(stat = "identity",
position = "stack",
width = 1)
b <- b + panel_border(remove = TRUE)
b <- ggdraw(switch_axis_position((b), axis = "y"))
cowplot::plot_grid(b)
a <- ggplot(df_mlt,
aes(x = document, y = value*10000, fill = factor(topic)) ) +
xlab("Cell types") + ylab("") +
scale_fill_brewer(palette = "Paired") +
theme(legend.position = "none",
axis.text = element_text(size = 4),
title = element_text(size = 6)) +
ggtitle("STRUCTURE plot by developmental phase") +
scale_y_continuous( breaks = seq(0, value_ifl, length.out = ticks_number),
labels = seq(0, 1, 1/(ticks_number -1 ) ) ) +
coord_flip()
# width = 1: increase bar width and in turn remove space
# between bars
b <- a + geom_bar(stat = "identity",
position = "stack",
width = 1)
b <- b + panel_border(remove = TRUE)
b <- ggdraw(switch_axis_position((b), axis = "y"))
cowplot::plot_grid(b)
a <- ggplot(df_mlt,
aes(x = document, y = value*10000, fill = factor(topic)) ) +
xlab("Cell types") + ylab("") +
scale_fill_brewer(palette = "Dark2") +
theme(legend.position = "none",
axis.text = element_text(size = 4),
title = element_text(size = 6)) +
ggtitle("STRUCTURE plot by developmental phase") +
scale_y_continuous( breaks = seq(0, value_ifl, length.out = ticks_number),
labels = seq(0, 1, 1/(ticks_number -1 ) ) ) +
coord_flip()
# width = 1: increase bar width and in turn remove space
# between bars
b <- a + geom_bar(stat = "identity",
position = "stack",
width = 1)
b <- b + panel_border(remove = TRUE)
b <- ggdraw(switch_axis_position((b), axis = "y"))
cowplot::plot_grid(b)
a <- ggplot(df_mlt,
aes(x = document, y = value*10000, fill = factor(topic)) ) +
xlab("Cell types") + ylab("") +
scale_fill_brewer(palette = "Set1") +
theme(legend.position = "none",
axis.text = element_text(size = 4),
title = element_text(size = 6)) +
ggtitle("STRUCTURE plot by developmental phase") +
scale_y_continuous( breaks = seq(0, value_ifl, length.out = ticks_number),
labels = seq(0, 1, 1/(ticks_number -1 ) ) ) +
coord_flip()
# width = 1: increase bar width and in turn remove space
# between bars
b <- a + geom_bar(stat = "identity",
position = "stack",
width = 1)
b <- b + panel_border(remove = TRUE)
b <- ggdraw(switch_axis_position((b), axis = "y"))
cowplot::plot_grid(b)
save_plot("../../../count-clustering/project/plots/jaitin-figures/jaitin-ggplot.png",
b, base_height = 4, base_width = 2)
save_plot("plots/jaitin-figures/jaitin-ggplot.png",
b, base_height = 4, base_width = 2)
cell_labels_count <- table(cell_labels_fact)
png(file = "plots/jaitin-figures/labels.png")
par(mfrow=c(1,2))
barplot(as.matrix(cell_labels_count), col = "white")
dev.off()
save_plot("plots/jaitin-figures/jaitin-ggplot.png",
b, base_height = 4, base_width = 2)
cell_labels_count <- table(cell_labels_fact)
png(file = "plots/jaitin-figures/labels.png")
par(mfrow=c(1,2))
barplot(as.matrix(cell_labels_count), col = "white")
dev.off()
col_data
table(unique(col_data[ , "amplification_batch"]))
table(unique(col_data[ , "sequencing_batch"]))
dim(col_data)
table(unique(col_data[ , "group_name"]))
png(file = "plots/jaitin-figures/amplfication-labels.png")
par(mfrow=c(1,2))
barplot(as.matrix(cell_labels_count), col = "white")
dev.off()
save_plot("plots/jaitin-figures/amplification.png",
b, base_height = 4, base_width = 2)
amp_batch <- as.numeric(meta_data_filtered[ , "sequencing_batch"])
cell_labels <- amp_batch
cell_labels <- amp_batch
cell_labels_unique <- paste(amp_batch, c(1:length(amp_batch)), sep = "_")
cell_labels_fact <- factor(cell_labels,
levels = sort(unique(cell_labels)))
# make the re-ordered dataframe
number_plot_subgroups <- length(unique(cell_labels))
df_ord_first <- do.call(rbind,
lapply(1:5, function(ii) {
temp_label <- levels(cell_labels_fact)[ii]
temp_df <- omega[which(cell_labels == temp_label), ]
# find the dominant cluster in each sample
each_sample_order <- apply(temp_df, 1, which.max)
# find the dominant cluster across samples
sample_order <- as.numeric(attr(table(each_sample_order), "name")[1])
# reorder the matrix
temp_df_ord <- temp_df[order(temp_df[ , sample_order]), ]
temp_df_ord
}) )
df_ord_second <- do.call(rbind,
lapply(6:number_plot_subgroups, function(ii) {
temp_label <- levels(cell_labels_fact)[ii]
temp_df <- omega[which(cell_labels == temp_label), ]
# find the dominant cluster in each sample
each_sample_order <- apply(temp_df, 1, which.max)
# find the dominant cluster across samples
sample_order <- as.numeric(attr(table(each_sample_order), "name")[1])
# reorder the matrix
temp_df_ord <- temp_df[order(temp_df[ , sample_order]), ]
temp_df_ord
}) )
df_ord <- rbind(df_ord_first, df_ord_second)
dim(df_ord)
df_mlt <- reshape2::melt(t(df_ord))
df_mlt <- plyr::rename(df_mlt, replace = c("Var1" = "topic",
"Var2" = "document"))
head(df_mlt)
# set blank background
theme_set(theme_bw(base_size = 12)) +
theme_update( panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank() )
value_ifl <- 10000
ticks_number <- 6
# Use RColorBrewer color
# http://bxhorn.com/rcolorbrewer-palettes/
a <- ggplot(df_mlt,
aes(x = document, y = value*10000, fill = factor(topic)) ) +
xlab("Cell types") + ylab("") +
scale_fill_brewer(palette = "Set1") +
theme(legend.position = "none",
axis.text = element_text(size = 4),
title = element_text(size = 6)) +
ggtitle("STRUCTURE plot by developmental phase") +
scale_y_continuous( breaks = seq(0, value_ifl, length.out = ticks_number),
labels = seq(0, 1, 1/(ticks_number -1 ) ) ) +
coord_flip()
# width = 1: increase bar width and in turn remove space
# between bars
b <- a + geom_bar(stat = "identity",
position = "stack",
width = 1)
b <- b + panel_border(remove = TRUE)
b <- ggdraw(switch_axis_position((b), axis = "y"))
cowplot::plot_grid(b)
seq_batch <- as.numeric(meta_data_filtered[ , "sequencing_batch"])
seq_batch <- as.numeric(meta_data_filtered[ , "sequencing_batch"])
cell_labels <- seq_batch
cell_labels_unique <- paste(amp_batch, c(1:length(amp_batch)), sep = "_")
cell_labels_fact <- factor(cell_labels,
levels = sort(unique(cell_labels)))
a <- paste(amp_batch, seq_batch, "_")
unique(a)
a <- paste(amp_batch, seq_batch, sep ="_")
unique(a)
amp_batch
seq_batch
amp_batch
seq_batch
col_data
table(amp_batch, seq_batch)
meta_data_filtered
seq_batch <- as.numeric(meta_data_filtered[ , "sequencing_batch"])
seq_batch
col_data
amp_batch <- as.numeric(meta_data_filtered[ , "amplification_batch"])
cell_labels <- amp_batch
cell_labels_unique <- paste(amp_batch, c(1:length(amp_batch)), sep = "_")
cell_labels_fact <- factor(cell_labels,
levels = sort(unique(cell_labels)))
head(amp_batch)
head(seq_batch)
unique(paste(amp_batch, seq_batch, sep = "_"))
table(amp_batch, seq_batch)
number_plot_subgroups <- length(unique(cell_labels))
df_ord <- do.call(rbind,
lapply(1:number_plot_subgroups, function(ii) {
temp_label <- levels(cell_labels_fact)[ii]
temp_df <- omega[which(cell_labels == temp_label), ]
# find the dominant cluster in each sample
each_sample_order <- apply(temp_df, 1, which.max)
# find the dominant cluster across samples
sample_order <- as.numeric(attr(table(each_sample_order), "name")[1])
# reorder the matrix
temp_df_ord <- temp_df[order(temp_df[ , sample_order]), ]
temp_df_ord
}) )
dim(df_ord)
df_mlt <- reshape2::melt(t(df_ord))
df_mlt <- plyr::rename(df_mlt, replace = c("Var1" = "topic",
"Var2" = "document"))
head(df_mlt)
# set blank background
theme_set(theme_bw(base_size = 12)) +
theme_update( panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank() )
value_ifl <- 10000
ticks_number <- 6
# Use RColorBrewer color
# http://bxhorn.com/rcolorbrewer-palettes/
a <- ggplot(df_mlt,
aes(x = document, y = value*10000, fill = factor(topic)) ) +
xlab("Cell types") + ylab("") +
scale_fill_brewer(palette = "Set1") +
theme(legend.position = "none",
axis.text = element_text(size = 4),
title = element_text(size = 6)) +
ggtitle("STRUCTURE plot by developmental phase") +
scale_y_continuous( breaks = seq(0, value_ifl, length.out = ticks_number),
labels = seq(0, 1, 1/(ticks_number -1 ) ) ) +
coord_flip()
# width = 1: increase bar width and in turn remove space
# between bars
b <- a + geom_bar(stat = "identity",
position = "stack",
width = 1)
b <- b + panel_border(remove = TRUE)
b <- ggdraw(switch_axis_position((b), axis = "y"))
cowplot::plot_grid(b)
# making sample labels
seq_batch <- as.numeric(meta_data_filtered[ , "sequencing_batch"])
cell_labels <- seq_batch
cell_labels_unique <- paste(seq_batch, c(1:length(amp_batch)), sep = "_")
cell_labels_fact <- factor(cell_labels,
levels = sort(unique(cell_labels)))
# make the re-ordered dataframe
number_plot_subgroups <- length(unique(cell_labels))
df_ord <- do.call(rbind,
lapply(1:number_plot_subgroups, function(ii) {
temp_label <- levels(cell_labels_fact)[ii]
temp_df <- omega[which(cell_labels == temp_label), ]
# find the dominant cluster in each sample
each_sample_order <- apply(temp_df, 1, which.max)
# find the dominant cluster across samples
sample_order <- as.numeric(attr(table(each_sample_order), "name")[1])
# reorder the matrix
temp_df_ord <- temp_df[order(temp_df[ , sample_order]), ]
temp_df_ord
}) )
dim(df_ord)
df_mlt <- reshape2::melt(t(df_ord))
df_mlt <- plyr::rename(df_mlt, replace = c("Var1" = "topic",
"Var2" = "document"))
head(df_mlt)
# set blank background
theme_set(theme_bw(base_size = 12)) +
theme_update( panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank() )
value_ifl <- 10000
ticks_number <- 6
# Use RColorBrewer color
# http://bxhorn.com/rcolorbrewer-palettes/
a <- ggplot(df_mlt,
aes(x = document, y = value*10000, fill = factor(topic)) ) +
xlab("Cell types") + ylab("") +
scale_fill_brewer(palette = "Set1") +
theme(legend.position = "none",
axis.text = element_text(size = 4),
title = element_text(size = 6)) +
ggtitle("STRUCTURE plot by developmental phase") +
scale_y_continuous( breaks = seq(0, value_ifl, length.out = ticks_number),
labels = seq(0, 1, 1/(ticks_number -1 ) ) ) +
coord_flip()
# width = 1: increase bar width and in turn remove space
# between bars
b <- a + geom_bar(stat = "identity",
position = "stack",
width = 1)
b <- b + panel_border(remove = TRUE)
b <- ggdraw(switch_axis_position((b), axis = "y"))
cowplot::plot_grid(b)
save_plot("plots/jaitin-figures/sequencing.png",
b, base_height = 4, base_width = 2)
# make axis labels
# take a barchart of the frequency of cell labels
# then copy and paste
png(file = "plots/jaitin-figures/sequencing-labels.png")
par(mfrow=c(1,2))
barplot(as.matrix(cell_labels_count), col = "white")
dev.off()
table(amp_batch)
table(seq_batch)
counts <- exprs(MouseJaitinSpleen)
library(singleCellRNASeqMouseJaitinSpleen)
data(MouseJaitinSpleen)
ls()
counts <- exprs(MouseJaitinSpleen)
gene_names <- fData(counts)
gene_names
counts <- exprs(MouseJaitinSpleen)
gene_names <- fData(MouseJaitinSpleen)
gene_names
head(gene_names)
meta_data <- pData(MouseJaitinSpleen)
dim(counts)
ENSG_genes_index <- grep("ERCC", gene_names, invert = TRUE)
length(ENSG_genes_index)
gene_names <- fData(MouseJaitinSpleen)
counts <- exprs(MouseJaitinSpleen)
gene_names <- rownames(fData(MouseJaitinSpleen))
meta_data <- pData(MouseJaitinSpleen)
dim(counts)
# exclude ERCC genes
ENSG_genes_index <- grep("ERCC", gene_names, invert = TRUE)
length(ENSG_genes_index)
counts_ensg <- counts[ENSG_genes_index, ]
head(meta_data)
# exclude wells more than 1 cell and with total UMI count > 600
# also include only CD11c+ cells
sum(as.numeric(meta_data$number_of_cells) ==1 &
meta_data$group_name =="CD11c+" & colSums(counts_ensg) > 600 )
## exclude ribosomal protein genes and ...
filter_genes <- c("M34473","abParts","M13680","Tmsb4x",
"S100a4","B2m","Atpase6","Rpl23","Rps18",
"Rpl13","Rps19","H2-Ab1","Rplp1","Rpl4",
"Rps26","EF437368")
fcounts <- counts_ensg[ -match(filter_genes, rownames(counts_ensg)), ]
sample_counts <- colSums(fcounts)
sum(meta_data$number_of_cells==1 & meta_data$group_name=="CD11c+" &
sample_counts > 600 )
## create sample filtering index
filter_sample_index <- which(meta_data$number_of_cells == 1 &
meta_data$group_name == "CD11c+" &
sample_counts > 600)
## create a filtered dataset
counts_ensg_filtered <- counts_ensg[ , filter_sample_index]
meta_data_filtered <- meta_data[filter_sample_index, ]
